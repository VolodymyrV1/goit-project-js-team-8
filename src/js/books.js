import axios from 'axios'; // —ñ–º–ø–æ—Ä—Ç—É—î–º–æ axios –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤ –¥–æ API

// –µ–ª–µ–º–µ–Ω—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
const categoryListEl = document.getElementById('category-list'); // ul –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
const booksListEl = document.getElementById('books-list'); // ul –¥–ª—è –∫–Ω–∏–≥
const catagoryCountEl = document.getElementById('category-count'); // –µ–ª–µ–º–µ–Ω—Ç –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∫–Ω–∏–≥

// —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
export async function loadCategories() {
  if (!categoryListEl) return;

  try {
    const response = await axios.get(
      'https://books-backend.p.goit.global/books/category-list'
    );

    let categories = response.data;

    categories.sort((a, b) => a.list_name.localeCompare(b.list_name));

    const allCategories = [{ list_name: 'All categories' }, ...categories];

    const markup = allCategories
      .map(({ list_name }) => `<li class="category-item">${list_name}</li>`)
      .join('');

    categoryListEl.insertAdjacentHTML('beforeend', markup);

    const firstCategory = categoryListEl.querySelector('.category-item');
    if (firstCategory) firstCategory.classList.add('active');

    categoryListEl.addEventListener('click', e => {
      const li = e.target.closest('.category-item');
      if (!li) return;

      categoryListEl
        .querySelectorAll('.category-item')
        .forEach(item => item.classList.remove('active'));
      li.classList.add('active');

      const category = li.textContent;

      loadBooksByCategory(category);
    });

    loadBooksByCategory('All categories');
  } catch (error) {
    console.error('Error loading categories:', error);
  }
}

// —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–Ω–∏–≥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
async function loadBooksByCategory(category) {
  if (!booksListEl) return;

  try {
    let url;
    if (category === 'All categories') {
      url = 'https://books-backend.p.goit.global/books/top-books';
    } else {
      url = `https://books-backend.p.goit.global/books/category?category=${encodeURIComponent(
        category
      )}`;
    }

    const response = await axios.get(url);

    let books = response.data;

    // –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏
    if (category === 'All categories') {
      books = books.flatMap(item => item.books);
    } else {
      books = books.flat();
    }

    // —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –∫–Ω–∏–≥–∏ –ø–æ title
    books = books.filter(
      (book, index, self) =>
        index === self.findIndex(b => b.title === book.title)
    );

    // üîπ –≤–∏–∑–Ω–∞—á–∞—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–Ω–∏–≥ –¥–ª—è –ø–æ–∫–∞–∑—É –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —à–∏—Ä–∏–Ω–∏ –µ–∫—Ä–∞–Ω—É
    const screenWidth = window.innerWidth; // –æ—Ç—Ä–∏–º—É—î–º–æ —à–∏—Ä–∏–Ω—É –≤—ñ–∫–Ω–∞
    const visibleCount = screenWidth < 1440 ? 10 : 24; // —è–∫—â–æ <1440 ‚Äî 10 –∫–Ω–∏–≥, —ñ–Ω–∞–∫—à–µ ‚Äî 24

    // üîπ –æ–±—Ä—ñ–∑–∞—î–º–æ –º–∞—Å–∏–≤ –¥–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ
    const visibleBooks = books.slice(0, visibleCount);

    booksListEl.innerHTML = '';

    const markup = visibleBooks
      .map(book => {
        const title = book.title ? book.title.toLowerCase() : '–±–µ–∑ –Ω–∞–∑–≤–∏'; // —Ç–µ–∫—Å—Ç –Ω–∞–∑–≤–∏ –º–∞–ª–∏–º–∏ –ª—ñ—Ç–µ—Ä–∞–º–∏
        const author = book.author
          ? book.author.toLowerCase()
          : '–Ω–µ–≤—ñ–¥–æ–º–∏–π –∞–≤—Ç–æ—Ä'; // –∞–≤—Ç–æ—Ä –º–∞–ª–∏–º–∏ –ª—ñ—Ç–µ—Ä–∞–º–∏
        const price = book.price || '–Ω–µ–º–∞—î —Ü—ñ–Ω–∏';
        const imageUrl =
          book.book_image ||
          'https://via.placeholder.com/227x322?text=No+Image';

        return `
          <li class="books-item-wraper">
            <div class="book-item-—Åontainer">
              <div class="books-img-wraper">
                <img src="${imageUrl}" alt="${title}" class="books-image"/>
              </div>
              <div class="books-info-wraper">
                <div class="books-text-wraper">
                  <h4>${title}</h4>
                  <p>${author}</p>
                </div>
                <div class="books-price-wraper">
                  <p>$${price}</p>
                </div>
              </div>
              <div class="button-wraper">
                <button type="button" class="books-button btn">Learn More</button>
              </div>
            </div>
          </li>
        `;
      })
      .join('');

    booksListEl.insertAdjacentHTML('beforeend', markup);

    // üîπ –æ–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫
    if (catagoryCountEl) {
      catagoryCountEl.textContent = `Showing ${visibleBooks.length} of ${books.length}`;
    }
  } catch (error) {
    console.error('Error loading books:', error);
  }
}

// —á–µ–∫–∞—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
document.addEventListener('DOMContentLoaded', () => {
  loadCategories();
});
