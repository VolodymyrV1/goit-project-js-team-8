import axios from 'axios'; // —ñ–º–ø–æ—Ä—Ç—É—î–º–æ axios –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤ –¥–æ API

let allBooks = []; // –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤—Å—ñ –∫–Ω–∏–≥–∏ –ø–æ—Ç–æ—á–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
let visibleBooksCount = 0; // –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–Ω–∏–≥, —è–∫—ñ –∑–∞—Ä–∞–∑ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—é—Ç—å—Å—è
const increment = 4; // –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞—Ä—Ç–æ–∫, —è–∫—ñ –¥–æ–¥–∞—é—Ç—å—Å—è –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ "Show More"
const loadMoreBtn = document.getElementById('load-more'); // –∫–Ω–æ–ø–∫–∞ "Show More"

// –µ–ª–µ–º–µ–Ω—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
const categoryListEl = document.getElementById('category-list'); // ul –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
const booksListEl = document.getElementById('books-list'); // ul –¥–ª—è –∫–Ω–∏–≥
const catagoryCountEl = document.getElementById('category-count'); // –ª—ñ—á–∏–ª—å–Ω–∏–∫ –∫–Ω–∏–≥
const loader = document.querySelector('.loader-back'); // –ø—Ä–µ–ª–æ–∞–¥–µ—Ä

// ---------------- –§–£–ù–ö–¶–Ü–Ø –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –ö–ê–¢–ï–ì–û–†–Ü–ô ----------------
async function loadCategories() {
  if (!categoryListEl) return;

  try {
    const response = await axios.get(
      'https://books-backend.p.goit.global/books/category-list'
    );

    let categories = response.data;

    // —Å–æ—Ä—Ç—É—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑–∞ –∞–ª—Ñ–∞–≤—ñ—Ç–æ–º
    categories.sort((a, b) => a.list_name.localeCompare(b.list_name));

    // –¥–æ–¥–∞—î–º–æ –ø—É–Ω–∫—Ç "All categories" –Ω–∞ –ø–æ—á–∞—Ç–æ–∫
    const allCategories = [
      { list_name: 'All categories' },
      ...categories.filter(cat => cat.list_name && cat.list_name.trim() !== ''),
    ];

    // –≥–µ–Ω–µ—Ä—É—î–º–æ HTML –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
    const markup = allCategories
      .map(({ list_name }) => `<li class="category-item">${list_name}</li>`)
      .join('');

    categoryListEl.innerHTML = markup;

    // —Ä–æ–±–∏–º–æ –ø–µ—Ä—à—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∞–∫—Ç–∏–≤–Ω–æ—é
    const firstCategory = categoryListEl.querySelector('.category-item');
    if (firstCategory) firstCategory.classList.add('active');

    // –æ–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    categoryListEl.addEventListener('click', e => {
      const li = e.target.closest('.category-item');
      if (!li) return;

      // –∑–Ω—ñ–º–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∑ —É—Å—ñ—Ö
      categoryListEl
        .querySelectorAll('.category-item')
        .forEach(item => item.classList.remove('active'));

      // –¥–æ–¥–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –æ–±—Ä–∞–Ω—ñ–π
      li.classList.add('active');

      const category = li.textContent;

      // –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–Ω–∏–≥–∏ –Ω–æ–≤–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
      loadBooksByCategory(category);

      // –∑–∞–∫—Ä–∏–≤–∞—î–º–æ —Å–ø–∏—Å–æ–∫ –Ω–∞ –º–æ–±—ñ–ª—å–Ω—ñ–π –≤–µ—Ä—Å—ñ—ó
      if (window.innerWidth < 1440) {
        categoryListEl.classList.remove('show');
      }
    });

    // –∫–Ω–æ–ø–∫–∞ "Categories" –¥–ª—è –º–æ–±—ñ–ª—å–Ω–æ–≥–æ
    const dropdownBtn = document.querySelector('.dropdown-btn');

    if (dropdownBtn && categoryListEl) {
      dropdownBtn.addEventListener('click', () => {
        categoryListEl.classList.toggle('show');
      });

      // –ø—Ä–∏ —Ä–µ—Å–∞–π–∑—ñ ‚Äî –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è
      window.addEventListener('resize', () => {
        if (window.innerWidth >= 768) {
          categoryListEl.classList.remove('show');
        }
      });
    }

    // –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–Ω–∏–≥–∏ –¥–ª—è "All categories" –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    loadBooksByCategory('All categories');
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π:', error);
  }
}

// ---------------- –§–£–ù–ö–¶–Ü–Ø –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –ö–ù–ò–ì ----------------
async function loadBooksByCategory(category) {
  if (!booksListEl) return;

  try {
    showLoader();
    let url;

    // —Ñ–æ—Ä–º—É—î–º–æ URL –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    if (category === 'All categories') {
      url = 'https://books-backend.p.goit.global/books/top-books';
    } else {
      url = `https://books-backend.p.goit.global/books/category?category=${encodeURIComponent(
        category
      )}`;
    }

    const response = await axios.get(url);
    let books = response.data;

    // —è–∫—â–æ "All categories" ‚Äî –ø–ª–æ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫
    if (category === 'All categories') {
      books = books.flatMap(item => item.books);
    } else {
      books = books.flat();
    }

    // –≤–∏–¥–∞–ª—è—î–º–æ –¥—É–±–ª—ñ–∫–∞—Ç–∏
    books = books.filter(
      (book, index, self) =>
        index === self.findIndex(b => b.title === book.title)
    );

    allBooks = books;

    // –≤–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞—Ä—Ç–æ–∫
    const screenWidth = window.innerWidth;
    const initialCount = screenWidth < 1440 ? 10 : 24;

    // —Å–∫–∏–¥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–¥–∏–º–∏—Ö –∫–∞—Ä—Ç–æ–∫
    visibleBooksCount = Math.min(initialCount, allBooks.length);

    // üëâ –æ—á–∏—â–∞—î–º–æ —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–¥ –ø–µ—Ä—à–∏–º —Ä–µ–Ω–¥–µ—Ä–æ–º (–ù–û–í–ê –ö–ê–¢–ï–ì–û–†–Ü–Ø)
    booksListEl.innerHTML = '';

    // –≤–∏–∫–ª–∏–∫–∞—î–º–æ —Ä–µ–Ω–¥–µ—Ä —Ç—ñ–ª—å–∫–∏ –≤–∏–¥–∏–º–∏—Ö –∫–∞—Ä—Ç–æ–∫
    renderBooks(false); // false ‚Äî —â–æ–± –Ω–µ –ø–µ—Ä–µ–∑–∞–ª–∏–≤–∞—Ç–∏, –∞ –¥–æ–¥–∞–≤–∞—Ç–∏
    toggleLoadMoreButton();
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–Ω–∏–≥:', error);
  } finally {
    hideLoader();
  }
}

// ---------------- –§–£–ù–ö–¶–Ü–Ø –†–ï–ù–î–ï–†–£ –ö–ù–ò–ì ----------------
function renderBooks(append = false) {
  // ‚ö° append = false => –æ—á–∏—â—É—î–º–æ —Å–ø–∏—Å–æ–∫ (–Ω–æ–≤–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó)
  // ‚ö° append = true => –¥–æ–¥–∞—î–º–æ –¥–æ –Ω–∞—è–≤–Ω–∏—Ö (–ø—Ä–∏ Show More)

  const booksToShow = allBooks.slice(
    append ? booksListEl.children.length : 0, // —è–∫—â–æ –¥–æ–¥–∞—î–º–æ ‚Äî –ø–æ—á–∏–Ω–∞—î–º–æ –∑ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ —ñ–Ω–¥–µ–∫—Å—É
    visibleBooksCount
  );

  const markup = booksToShow
    .map(book => {
      const title = book.title ? book.title.toLowerCase() : '–±–µ–∑ –Ω–∞–∑–≤–∏';
      const author = book.author
        ? book.author.toLowerCase()
        : '–Ω–µ–≤—ñ–¥–æ–º–∏–π –∞–≤—Ç–æ—Ä';
      const price = book.price || '–Ω–µ–º–∞—î —Ü—ñ–Ω–∏';
      const bookId = book._id;
      const imageUrl =
        book.book_image || 'https://via.placeholder.com/227x322?text=No+Image';

      return `
        <li class="books-item-wraper">
          <div class="book-item-container">
            <div class="books-img-wraper">
              <img src="${imageUrl}" alt="${title}" class="books-img"/>
            </div>
            <div class="books-info-wraper">
              <div class="books-text-wraper">
                <h4>${title}</h4>
                <p>${author}</p>
              </div>
              <div class="books-price-wraper">
                <p>$${price}</p>
              </div>
            </div>
            <div class="button-wraper">
              <button type="button" class="books-button btn" id="${bookId}">Learn More</button>
            </div>
          </div>
        </li>
      `;
    })
    .join('');

  // üü¢ —è–∫—â–æ append === true ‚Äî –¥–æ–¥–∞—î–º–æ –≤ –∫—ñ–Ω–µ—Ü—å, —ñ–Ω–∞–∫—à–µ ‚Äî –ø–µ—Ä–µ–∑–∞–ø–∏—Å—É—î–º–æ —Å–ø–∏—Å–æ–∫
  if (append) {
    booksListEl.insertAdjacentHTML('beforeend', markup);
  } else {
    booksListEl.innerHTML = markup;
  }

  // –æ–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫
  if (catagoryCountEl) {
    catagoryCountEl.textContent = `–ü–æ–∫–∞–∑–∞–Ω–æ ${booksListEl.children.length} –∑ ${allBooks.length}`;
  }
}

// ---------------- –ö–ù–û–ü–ö–ê "SHOW MORE" ----------------
if (loadMoreBtn) {
  loadMoreBtn.addEventListener('click', () => {
    // –¥–æ–¥–∞—î–º–æ –Ω–æ–≤—ñ –∫–∞—Ä—Ç–∫–∏, –Ω–µ –æ—á–∏—â–∞—é—á–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ
    visibleBooksCount = Math.min(
      visibleBooksCount + increment,
      allBooks.length
    );

    renderBooks(true); // üëâ true ‚Äî –¥–æ–¥–∞—î–º–æ, –∞ –Ω–µ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä—é—î–º–æ –≤—Å–µ
    toggleLoadMoreButton();

    loadMoreBtn.blur(); // –∑–Ω—ñ–º–∞—î–º–æ —Ñ–æ–∫—É—Å
  });
}

// ---------------- –ü–û–ö–ê–ó/–ü–†–ò–•–û–í–ê–ù–ù–Ø –ö–ù–û–ü–ö–ò ----------------
function toggleLoadMoreButton() {
  if (!loadMoreBtn) return;
  if (visibleBooksCount >= allBooks.length) {
    loadMoreBtn.style.display = 'none';
  } else {
    loadMoreBtn.style.display = 'block';
  }

  // –æ–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞
  if (catagoryCountEl) {
    catagoryCountEl.textContent = `–ü–æ–∫–∞–∑–∞–Ω–æ ${visibleBooksCount} –∑ ${allBooks.length}`;
  }
}

// ---------------- –û–ë–†–û–ë–ö–ê –†–ï–°–ê–ô–ó–£ ----------------
window.addEventListener('resize', () => {
  if (!allBooks.length) return;

  const screenWidth = window.innerWidth;
  const newInitial = screenWidth < 1440 ? 10 : 24;

  if (visibleBooksCount < newInitial) {
    visibleBooksCount = Math.min(newInitial, allBooks.length);
    renderBooks(false); // –ø—Ä–∏ —Ä–µ—Å–∞–π–∑—ñ ‚Äî –æ–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫
    toggleLoadMoreButton();
  }
});

// ---------------- –ü–†–ò –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ü DOM ----------------
document.addEventListener('DOMContentLoaded', () => {
  loadCategories();
});

// ---------------- –õ–û–ê–î–ï–† ----------------
function showLoader() {
  if (loader) loader.style.display = 'flex';
}
function hideLoader() {
  if (loader) loader.style.display = 'none';
}
